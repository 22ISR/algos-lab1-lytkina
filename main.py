"""
 _____         _      __  
|_   _|       | |    /  | 
  | | __ _ ___| | __ `| | 
  | |/ _` / __| |/ /  | | 
  | | (_| \__ \   <  _| |_
  \_/\__,_|___/_|\_\ \___/

Напишите программу, которая выводит в консоль "Hello world"

hint: что такое print?
"""

print ("Hello world")

"""
 _____         _      _____ 
|_   _|       | |    / __  \
  | | __ _ ___| | __ `' / /'
  | |/ _` / __| |/ /   / /  
  | | (_| \__ \   <  ./ /___
  \_/\__,_|___/_|\_\ \_____/

Напишите рограмму, которая выводит числа от 1 до введенного пользователем. Для чисел, кратных 3, выводится "Fizz",'
для кратных 5 — "Buzz", а для чисел, кратных 3 и 5 — "FizzBuzz"

hint: цикл, если и "%"
"""

# Запрашиваем число у пользователя
n = int(input("Введите число: "))

# Выводим числа от 1 до n
for i in range(1, n + 1):
    if i % 3 == 0 and i % 5 == 0:
        print("FizzBuzz")
    elif i % 3 == 0:
        print("Fizz")
    elif i % 5 == 0:
        print("Buzz")
    else:
        print(i)

"""
 _____         _      _____ 
|_   _|       | |    |____ |
  | | __ _ ___| | __     / /
  | |/ _` / __| |/ /     \ \
  | | (_| \__ \   <  .___/ /
  \_/\__,_|___/_|\_\ \____/ 

Напишите программу, которая проверяет, является ли введенный пользователем год високосным

hint: https://ru.wikihow.com/%D0%B2%D1%8B%D1%81%D1%87%D0%B8%D1%82%D1%8B%D0%B2%D0%B0%D1%82%D1%8C-%D0%B2%D0%B8%D1%81%D0%BE%D0%BA%D0%BE%D1%81%D0%BD%D1%8B%D0%B5-%D0%B3%D0%BE%D0%B4%D1%8B
"""

# Запрашиваем год у пользователя
year = int(input("Введите год: "))

# Проверяем, является ли год високосным
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(f"{year} является високосным годом.")
else:
    print(f"{year} не является високосным годом.")

"""
 _____         _        ___ 
|_   _|       | |      /   |
  | | __ _ ___| | __  / /| |
  | |/ _` / __| |/ / / /_| |
  | | (_| \__ \   <  \___  |
  \_/\__,_|___/_|\_\     |_/

Напишите программау, которая проверяет, является ли введенная пользователем строка или число палиндромом, то есть читается ли оно одинаково с обеих сторон

hint: https://letpy.com/handbook/builtins/reversed/
"""

# Запрашиваем ввод у пользователя
input_value = input("Введите строку или число: ")

# Убираем пробелы и приводим к нижнему регистру
normalized_value = input_value.replace(" ", "").lower()

# Проверяем, является ли строка палиндромом
if normalized_value == ''.join(reversed(normalized_value)):
    print(f"'{input_value}' является палиндромом.")
else:
    print(f"'{input_value}' не является палиндромом.")

"""
 _____         _      _____ 
|_   _|       | |    |  ___|
  | | __ _ ___| | __ |___ \ 
  | |/ _` / __| |/ /     \ \
  | | (_| \__ \   <  /\__/ /
  \_/\__,_|___/_|\_\ \____/ 

Напишите программу, которая запрашивает число у пользователя и вычисляет факториал заданного числа, используя цикл или рекурсию

hint: https://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%B0%D0%BB
"""

# Запрашиваем число у пользователя
num = int(input("Введите целое число: "))

# Инициализируем переменную для хранения факториала
factorial = 1

# Вычисляем факториал с помощью цикла
for i in range(1, num + 1):
    factorial *= i

print(f"Факториал числа {num} равен {factorial}.")

"""
 _____         _       ____ 
|_   _|       | |     / ___|
  | | __ _ ___| | __ / /___ 
  | |/ _` / __| |/ / | ___ \
  | | (_| \__ \   <  | \_/ |
  \_/\__,_|___/_|\_\ \_____/

Напишите программу, которая проверяет, является ли число простым (делится только на 1 и само на себя). Используйте перебор делителей.

hint: x <= 1 - не простые числа
hint 2: %
"""

# Запрашиваем ввод числа у пользователя
num = int(input("Введите целое число: "))

# Предполагаем, что число простое
is_prime = True

# Проверяем, является ли число меньше или равно 1
if num <= 1:
    is_prime = False
else:
    # Перебираем делители от 2 до квадратного корня из числа
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:  # Если есть делитель, число не простое
            is_prime = False
            break

# Выводим результат
if is_prime:
    print(f"{num} является простым числом.")
else:
    print(f"{num} не является простым числом.")

"""
 _____         _      ______
|_   _|       | |    |___  /
  | | __ _ ___| | __    / / 
  | |/ _` / __| |/ /   / /  
  | | (_| \__ \   <  ./ /   
  \_/\__,_|___/_|\_\ \_/    

Напишите программу, которая находит сумму всех цифр числа

hint: циклы
"""

# Запрашиваем ввод числа у пользователя
num = input("Введите целое число: ")

# Инициализируем переменную для хранения суммы
digit_sum = 0

# Перебираем каждую цифру в числе
for digit in num:
    if digit.isdigit():  # Проверяем, является ли символ цифрой
        digit_sum += int(digit)  # Добавляем цифру к сумме

# Выводим результат
print(f"Сумма цифр числа {num} равна {digit_sum}.")

"""
 _____         _      _____ 
|_   _|       | |    |  _  |
  | | __ _ ___| | __  \ V / 
  | |/ _` / __| |/ /  / _ \ 
  | | (_| \__ \   <  | |_| |
  \_/\__,_|___/_|\_\ \_____/

Напишите программу, которая генерирует последовательность Фибоначчи до указанного числа или количества элементов

hint: 1, 1, 2, 3 https://ru.wikipedia.org/wiki/%D0%A7%D0%B8%D1%81%D0%BB%D0%B0_%D0%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8
hint 2: попробуйте решить с помощью рекурсии
"""

# Рекурсивная функция для вычисления n-го числа Фибоначчи
def fibonacci(n):
    if n <= 0:
        return 0
    elif n == 1 or n == 2:
        return 1
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

# Запрашиваем у пользователя количество элементов последовательности Фибоначчи
count = int(input("Введите количество элементов последовательности Фибоначчи: "))

# Генерируем и выводим последовательность Фибоначчи
fib_sequence = [fibonacci(i) for i in range(1, count + 1)]
print(f"Последовательность Фибоначчи ({count} элементов): {fib_sequence}") 




